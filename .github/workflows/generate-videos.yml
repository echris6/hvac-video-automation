name: Generate Website Videos

on:
  repository_dispatch:
    types: [generate_websites]

jobs:
  generate-videos:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install system dependencies and Puppeteer requirements
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          ffmpeg \
          wget \
          ca-certificates \
          fonts-liberation \
          libappindicator3-1 \
          libasound2t64 \
          libatk-bridge2.0-0 \
          libatk1.0-0 \
          libc6 \
          libcairo2 \
          libcups2 \
          libdbus-1-3 \
          libexpat1 \
          libfontconfig1 \
          libgcc-s1 \
          libgdk-pixbuf2.0-0 \
          libglib2.0-0 \
          libgtk-3-0 \
          libnspr4 \
          libnss3 \
          libpango-1.0-0 \
          libpangocairo-1.0-0 \
          libstdc++6 \
          libx11-6 \
          libx11-xcb1 \
          libxcb1 \
          libxcomposite1 \
          libxcursor1 \
          libxdamage1 \
          libxext6 \
          libxfixes3 \
          libxi6 \
          libxrandr2 \
          libxrender1 \
          libxss1 \
          libxtst6 \
          libxkbcommon0 \
          libdrm2 \
          libgbm1 \
          libpulse0 \
          libasound2-data \
          xdg-utils

    - name: Install Google Chrome
      run: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Install Node.js dependencies
      run: npm install

    - name: Process website payload and create HTML files
      run: |
        echo "Processing payload..."
        echo "Payload: $PAYLOAD"
        
        # Ensure processing results file exists even if empty
        mkdir -p .github/scripts
        
        if [ -z "$PAYLOAD" ] || [ "$PAYLOAD" = "null" ]; then
          echo "No payload provided, creating empty processing results"
          echo "[]" > .github/scripts/processing-results.json
        else
          node .github/scripts/process-payload.js
        fi
        
        # Verify processing results file exists
        if [ ! -f ".github/scripts/processing-results.json" ]; then
          echo "Creating empty processing results file as fallback"
          echo "[]" > .github/scripts/processing-results.json
        fi
        
        echo "Processing results:"
        cat .github/scripts/processing-results.json
      env:
        PAYLOAD: ${{ toJson(github.event.client_payload) }}
        NODE_ENV: production

    - name: Start video generation server
      run: |
        npm start &
        echo $! > server.pid
        sleep 10  # Wait for server to start
      env:
        NODE_ENV: production
        PUPPETEER_EXECUTABLE_PATH: /usr/bin/google-chrome-stable
        DISPLAY: :99.0

    - name: Generate videos from created websites
      run: |
        echo "Starting video generation..."
        
        # Check if processing results file has content
        if [ -f ".github/scripts/processing-results.json" ]; then
          WEBSITE_COUNT=$(jq length .github/scripts/processing-results.json)
          echo "Found $WEBSITE_COUNT websites to process"
          
          if [ "$WEBSITE_COUNT" -gt 0 ]; then
            node .github/scripts/generate-videos.js
          else
            echo "No websites to process, skipping video generation"
            # Create empty generation results
            echo '{"timestamp":"'$(date -u)'","totalWebsites":0,"successful":0,"failed":0,"results":[]}' > .github/scripts/generation-results.json
          fi
        else
          echo "No processing results found, skipping video generation"
          echo '{"timestamp":"'$(date -u)'","totalWebsites":0,"successful":0,"failed":0,"results":[]}' > .github/scripts/generation-results.json
        fi
        
        echo "Video generation completed"
      timeout-minutes: 30
      env:
        NODE_ENV: production
        PUPPETEER_EXECUTABLE_PATH: /usr/bin/google-chrome-stable
        DISPLAY: :99.0

    - name: Stop server
      run: |
        if [ -f server.pid ]; then
          kill $(cat server.pid) || true
          rm server.pid
        fi

    - name: Create workflow summary
      run: |
        echo "📊 Video Generation Summary" > workflow-summary.txt
        echo "Generated at: $(date -u)" >> workflow-summary.txt
        echo "Triggered by: repository_dispatch event" >> workflow-summary.txt
        echo "" >> workflow-summary.txt
        
        # Count generated files
        if [ -d "websites" ]; then
          echo "🌐 Website files: $(find websites -name "*.html" | wc -l)" >> workflow-summary.txt
        fi
        
        if [ -d "videos" ]; then
          echo "🎬 Video files: $(find videos -name "*.mp4" -o -name "*.webm" | wc -l)" >> workflow-summary.txt
          echo "" >> workflow-summary.txt
          echo "📹 Generated videos:" >> workflow-summary.txt
          find videos -name "*.mp4" -o -name "*.webm" | sort >> workflow-summary.txt
        fi
        
        cat workflow-summary.txt

    - name: Commit and push generated files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add all new files and results
        git add websites/ || true
        git add videos/ || true
        git add .github/scripts/*.json || true
        git add workflow-summary.txt || true
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "🎬 Auto-generated website videos from n8n workflow

          Generated at: $(date -u)
          Triggered by: repository_dispatch event
          Event type: generate_websites"
          
          git push
        fi

    - name: Upload artifacts (backup)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: generated-videos-${{ github.run_number }}
        path: |
          videos/*.mp4
          websites/**/*.html
        retention-days: 30 